{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SA6BpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IArCPL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEhC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,EAAc,EACnDC,EAAA7B,GAAS8B,OAAOC,QAAS,sCAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAaI,IAC/B3B,EAAc,EAAI2B,EAAGR,EAAaQ,EAAIL,GACnCM,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBsB,EAAA7B,GAAS8B,OAAOK,QACd,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAG7C8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBsB,EAAA7B,GAAS8B,OAAOQ,QAAQ,oBAAmCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAIzEL,EAAKqC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  if (inputDelay < 0 || inputStep < 0 || inputAmount < 0) {\n    Notiflix.Notify.warning(`Enter a number greater than 0`);\n  } else {\n    for (let i = 0; i < inputAmount; i++) {\n      createPromise(1 + i, inputDelay + i * inputStep)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  }\n  form.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","$parcel$interopDefault","Notify","warning","i","then","param","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.3b43110e.js.map"}